<?xml version = "1.0" encoding = "UTF-8" ?>
<!DOCTYPE pise PUBLIC "pise2.dtd" "pise2.dtd"  [
<!ENTITY runtime_tg PUBLIC "run_time2.xml.in" "run_time2.xml.in" >
]>
<!-- Created by Mark Miller for CryoEM project around 5/24/2016-->
<pise>
  <head>
    <title>MicAssess</title>
    <version>0.1</version>
    <description>Automatically assess micrograph quality with deep learning.</description>
    <authors>Yilai Li and Michael Cianfrocco</authors>
    <reference>https://pubmed.ncbi.nlm.nih.gov/32294468/</reference>
    <category>Automated assessment tools</category>
    <doclink>https://www.biorxiv.org/content/10.1101/2019.12.20.885541v1.full</doclink>
  </head>

  <command>auto_micassess</command>

<parameters>
<!-- command name: this parameter precedes all instruction strings -->
    <parameter ishidden="1" type="String"> 
	  <name>relion_invoke</name>
	  <attributes>
	    <format>
		  <language>perl</language>
		  <code>"/home/cosmic2/software_dependencies/Automatic-cryoEM-preprocessing/micassess.py"</code>
		</format>
		<group>0</group>
	  </attributes>
	</parameter> 
	  
<!-- build the conf file -->
	<parameter ishidden="1" type="String">
		<name>relion_scheduler</name>
		<attributes>
			<paramfile>scheduler.conf</paramfile>
			<format>
				<language>perl</language>
				<code>
<!-- RUN THESE JOBS ON Comet -->
				 "runhours=1\\n" . 
                 "ChargeFactor=1.0\\n" .
			     "ntasks-per-node=1\\n" .
				 "node_exclusive=1\\n" .
                 "cores_per_node=1\\n" .
				 "nodes=1\\n"
				</code>
			</format>
			<group>1</group>
		</attributes>
	</parameter>	

<!-- create the non-configurable command line -->
<!--  -->
	<parameter ishidden="1" type="String">
		<name>relion_commandline</name>
		<attributes>
			<group>1</group>
		</attributes>
	</parameter>	

<!-- required input file, this is selected outside the parameters gui -->
    <parameter isinput = "1" type = "InFile">
	  <name>infile</name>
	  <attributes>
	    <prompt>STAR file</prompt>
		<format>
		  <language>perl</language>
		  <code>'-i "$value"'</code>
		</format>
	    <group>90</group>
	  </attributes>	  
	</parameter>

	<parameter type="Float" issimple="1" ismandatory="1">
        <name>thresh</name>
        <attributes>
            <group>1</group>
            <prompt>Threshold for classification. Default is 0.1. Higher number will cause more good micrographs being classified as bad.</prompt>
            <format>
                <language>perl</language>
                <code>"-t $value"</code>
            </format>
            <vdef>
                <value>0.1</value>
            </vdef>
			<ctrls>
                <ctrl>
                    <message>Please enter a value > 0 for the threshold</message>
                    <language>perl</language>
                    <code>$thresh &lt; 0</code>
                </ctrl>
            </ctrls>
        </attributes>
    </parameter>


<!--

        <parameter ishidden="1" type="Integer" ismandatory="1" issimple="1">
            <name>seconds</name>
            <attributes>
                <prompt>Number of seconds to sleep</prompt>
                <format>
                    <language>perl</language>
                    <code>"$value"</code>
                </format>
                <vdef><value>10</value></vdef>
                <group>3</group>
            </attributes>
        </parameter>

 -->
	
<!-- Files to transfer back -->
	<parameter type="Results">
	  <name>Error log file</name>
	  <attributes>
	    <filenames>stderr</filenames>
	  </attributes>
	</parameter>
    <parameter type="Results">
        <name>STAR file output</name>
        <attributes>
            <filenames>*micassess_good.star</filenames>
        </attributes>
    </parameter>
	<parameter type="Results">
        <name>Good and bad micrograph JPG files</name>
        <attributes>
            <filenames>*.zip</filenames>
        </attributes>
    </parameter>
</parameters>

</pise>
