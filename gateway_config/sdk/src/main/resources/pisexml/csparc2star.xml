<?xml version = "1.0" encoding = "UTF-8" ?>
<!DOCTYPE pise PUBLIC "pise2.dtd" "pise2.dtd"  [
<!ENTITY runtime_tg PUBLIC "run_time2.xml.in" "run_time2.xml.in" >
]>
<!-- Created by Mark Miller for CryoEM project around 5/24/2016-->
<pise>
  <head>
    <title>cryoSPARC to STAR (csparc2star.py)</title>
    <version>0.5</version>
    <description>Convert cryoSPARC file to STAR file for RELION using csparc2star.py from pyem software package</description>
    <authors>Daniel Asarnow</authors>
    <reference>https://github.com/asarnow/pyem</reference>
    <category>Conversion</category>
    <doclink>https://github.com/asarnow/pyem</doclink>
  </head>

  <command>csparc2star</command>

<parameters>
<!-- command name: this parameter precedes all instruction strings -->
    <parameter ishidden="1" type="String"> 
	  <name>relion_invoke</name>
	  <attributes>
	    <format>
		  <language>perl</language>
		  <code>"/expanse/projects/cosmic2/expanse/software_dependencies/pyem/csparc2star.py"</code>
		</format>
		<group>0</group>
	  </attributes>
	</parameter> 
	  
<!-- build the conf file -->
	<parameter ishidden="1" type="String">
		<name>relion_scheduler</name>
		<attributes>
			<paramfile>scheduler.conf</paramfile>
			<format>
				<language>perl</language>
				<code>
<!-- RUN THESE JOBS ON Comet -->
				 "runhours=1\\n" . 
                 "ChargeFactor=1.0\\n" .
			     "ntasks-per-node=1\\n" .
                 "cores_per_node=1\\n" .
				 "nodes=1\\n"
				</code>
			</format>
			<group>1</group>
		</attributes>
	</parameter>	

<!-- create the non-configurable command line -->
<!--  -->
	<parameter ishidden="1" type="String">
		<name>relion_commandline</name>
		<attributes>
			<group>1</group>
		</attributes>
	</parameter>	

<!-- required input file, this is selected outside the parameters gui -->
    <parameter isinput = "1" type = "InFile">
	  <name>infile</name>
	  <attributes>
	    <prompt>.cs file</prompt>
		<format>
		  <language>perl</language>
		  <code>"$value"</code>
		</format>
	    <group>90</group>
	  </attributes>	  
	</parameter>
	
    <parameter type="Results">
        <name>STAR file output</name>
        <attributes>
            <filenames>*.star</filenames>
        </attributes>
    </parameter>

<!-- visible input parameters -->	
	<parameter type="InFile" issimple="1">
        <name>ref</name>
        <attributes>
            <group>1</group>
            <prompt>(Optional) Additional file (e.g. passthrough.cs)</prompt>
            <format>
                <language>perl</language>
                <code>"$value"</code>
            </format>
        </attributes>
    </parameter>
	<parameter type="InFile" issimple="1">
        <name>copymic</name>
        <attributes>
            <group>1</group>
            <prompt>(Optional) Source for micrograph paths and particle coordinates (e.g. particles.star)</prompt>
            <format>
                <language>perl</language>
                <code>"--copy-micrograph-coordinates $value"</code>
            </format>
        </attributes>
    </parameter>
	<parameter type="String" issimple="1">
        <name>micpath</name>
        <attributes>
            <group>1</group>
            <prompt>(Optional) Replacement path for micrographs</prompt>
            <format>
                <language>perl</language>
                <code>"--micrograph-path $value"</code>
            </format>
        </attributes>
    </parameter>
	<parameter type="String">
        <name>stackpath</name>
        <attributes>
            <group>1</group>
            <prompt>(Optional) Path for single stack (e.g. FREALIGN)</prompt>
            <format>
                <language>perl</language>
                <code>"--stack-path $value"</code>
            </format>
        </attributes>
    </parameter>
</parameters>

</pise>
