###Globus Auth URLs###
token_server_url=https://auth.globus.org/v2/oauth2/token
auth_uri=https://auth.globus.org/v2/oauth2/authorize
logout_uri=https://auth.globus.org/v2/web/logout
revoke_uri=https://auth.globus.org/v2/oauth2/token/revoke

#After registering your app into Globus,
#you will receive a client ID and a client secret.
#The client ID is considered public information.
#The client secret must be kept confidential.
client_id=<id>
client_secret=<password>

#To add scopes, add them comma separated into the scopes string
#scopes=openid,email,profile
scopes=openid,email,profile,urn:globus:auth:scope:transfer.api.globus.org:all

#The service will only redirect users to a registered URI
redirect_uri=http://localhost:8080/cosmic2/authcallback.action
logout_redirect_uri=http://localhost:8080/cosmic2/home.action
redirect_name=COSMIC2 Science Gateway

#XSEDE Comet endpoint and data repository
dataset_endpoint_id=de463f97-6d04-11e5-ba46-22000b92c6ec
dataset_endpoint_base=/projects/cosmic2/gateway/globus_transfers/
dataset_endpoint_name=XSEDE Comet

#MyProxy authentication
myproxy_host=myproxy.xsede.org
username=cyoun
password=xxxxxx

#credential lifetime unit is hour
lifetime=264

#Delegate Proxy Activation
# ==================================================================================
# This profram creates a proxy of the local credential using the provided public key.
# The proxy includes the certificate chain, and can be passed back to the API for activation.
# In more detail, please see https://github.com/globusonline/transfer-api-client-python/tree/master/mkproxy
mkproxy_path=/Users/cyoun/globusftp/transfer-api-client-java-master/mkproxy/mkproxy
# ==================================================================================
#the location of issuer credential file
issuer_cred_file=/Users/cyoun/globusftp/transfer-api-client-java-master/mkproxy/creds/user_cred.pem

#Syn Level
# 0 ==> Copy files that do not exist at the destination.
# 1 ==> Copy files if the size of the destination does not match the size of the source.
# 2 ==> Copy files if the timestamp of the destination is older than the timestamp of the source.
# 3 ==> Copy files if checksums of the source and destination do not match. Files on the destination are never deleted.
sync_level=2
